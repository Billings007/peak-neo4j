apply(la,2, function(x)trainDat[x,])
tapply(1:3,la, function(x)trainDat[x,])
tapply(la,1:3, function(x)trainDat[x,])
mapply(function(x)trainDat[x,], la)
t(mapply(function(x)trainDat[x,], la))
t(mapply(function(x)trainDat[x,], la))[[1]]
t(mapply(function(x)trainDat[x,], la))[1]
t(mapply(function(x)trainDat[x,], la))[1,1]
t(mapply(function(x)trainDat[x,], la))[,1]
t(mapply(function(x)trainDat[x,], la))[[1]][,1]
lapply(la, function(x) print(x))
lapply(la, function(x) print(x))[1]
lapply(la, function(x) print(x))[[1]]
lapply(la, function(x) print(x))[,1
]
sapply(la, function(x) print(x))
str(sa)
str(la)
la[[1]][1]
la[[1]][[1]]
la[[1]][[2]]
?ns
??ns
?splines::ns
library(purrr)
?map_df
map_df(la,function(x)trainDat[x,])
map_df(la,function(x)trainDat[x,])[3] == trainDat[la[[1]],]
map_df(la,function(x)trainDat[x,])[3]
map_df(la,function(x)trainDat[x,])[3,] == trainDat[la[[1]],]
map_df(la,function(x)trainDat[x,])[1:3,] == trainDat[la[[1]],]
map_df(la,function(x)trainDat[x,])[4:8,] == trainDat[la[[2]],]
map_df(la,function(x)trainDat[x,])[9:10,] == trainDat[la[[3]],]
map_df(la,function(x)trainDat[x,])[9:18,] == trainDat[la[[3]],]
map(la,function(x)trainDat[x,])
library(nycflights13)
73920881/116716292
116716292/300758215
300758215/116716292
datasets::trees
lm(trees$Height~trees$Girth)
lm(trees$Volume~trees$Girth)
datasets::Orange
lm((Orange$age/365)~Orange$circumference)
datasets::airmiles
datasets::airquality
datasets::airquality
lm(airquality$Ozone~airquality$Temp)
datasets::beaver1
mean(beaver1$temp)
datasets::esoph
library(nycflights13)
nycflights13::flights
hist(flights$distance)
hist(flights$air_time)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
max(flights$distance)
min(flights$distance)
estBetaParams(mean(flights$distance)/max(flights$distance), var(flights$distance)/(max(flights$distance)^2))
hist(flights$distance)
distB <- sample(min(flights$distance):max(flights$distance), 10000, replace=TRUE, prob=dbe)
sleep
?sleep
maps <- data.frame(nbr = c(101,102,103,125,175,252,275,212,280,300,352,399,441,440))
replicate(3, "MAT")
maps <- data.frame(Subject = replicate(27, "MAT"), nbr = c(101,102,111,125,130,150,175,212,221,222,252,275,280,281,282,283,311,312,352,361,370,372,399,431,441,451,461))
rbinom(5, 10, .7)
library(dplyr)
head(maps)
maps <- mutate(maps, F10 = rnorm(1, 1000/nbr, 500/nbr))
View(maps)
maps <- select(maps,-F10)
lapply(maps$number, function(x)rnorm(1, 1000/x, 500/x))
vapply(maps$number, function(x)rnorm(1, 1000/x, 500/x))
?vapply
lapply(as.list(maps$number), function(x)rnorm(1, 1000/x, 500/x))
sapply(maps$number, function(x)rnorm(1, 1000/x, 500/x))
lapply(maps$nbr, function(x)rnorm(1, 1000/x, 500/x))
sapply(maps$nbr, function(x)rnorm(1, 1000/x, 500/x))
sapply(maps$nbr, function(x)ceil(rnorm(1, 1000/x, 500/x)))
sapply(maps$nbr, function(x)ceiling(rnorm(1, 1000/x, 500/x)))
sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(m*ceiling(rnorm(1, 1000/x, 500/x)));})
sapply(maps$nbr, function(x) {ifelse(x<130, m=3, m=1); return(m*ceiling(rnorm(1, 1000/x, 500/x)));})
sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 1000/x, 500/x))));})
F10<-sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 1000/x, 500/x))));})
F11<-sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 1000/x, 500/x))));})
F12<-sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 9000/x, 450/x))));})
F13<-sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 9000/x, 450/x))));})
F13<-sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 1100/x, 500/x))));})
F14<-sapply(maps$nbr, function(x) {ifelse(x<130, m<-3, m<-1); return(abs(m*ceiling(rnorm(1, 1100/x, 500/x))));})
maps <- cbind.data.frame(maps, F10,F11,F12,F13,F14)
library(ggplot2)
library(tidyr)
gather(maps, key=Term, Value=Enrollment, -c(Subject, nbr)) %>% head()
?gather
gather(maps, key=Term, Value=Enrollment, -Subject, -nbr)) %>% head()
gather(maps, key=Term, Value=Enrollment, -Subject, -nbr) %>% head()
maps %>% select(-Subject) %>% gather(Term, Enroll, -nbr) %>% head()
maps %>% select(-Subject) %>% gather(Term, Enroll, -nbr) %>% ggplot(aes(x=nbr, y=Term))+geom_tile(fill=Enroll)
maps %>% select(-Subject) %>% gather(Term, Enroll, -nbr) %>% ggplot(aes(x=nbr, y=Term))+geom_tile(aes(fill=Enroll))
maps %>% select(-Subject) %>% gather(Term, Enroll, -nbr) %>% ggplot(aes(x=as.factor(nbr), y=Term))+geom_tile(aes(fill=Enroll))
maps$F12 <- ceiling(maps$F12/10)
maps %>% select(-Subject) %>% gather(Term, Enroll, -nbr) %>% ggplot(aes(x=as.factor(nbr), y=Term))+geom_tile(aes(fill=Enroll))
maps %>% select(-Subject) %>% gather(Term, Enroll, -nbr) %>% ggplot(aes(y=as.factor(nbr), x=Term))+geom_tile(aes(fill=Enroll))
install.packages("gamair")
library(gamair)
data("hubble")
?hubble
View(hubble)
ggplot(hubble, aes(x=x,y=y))+geom_point()
library(ggplot2)
ggplot(hubble, aes(x=x,y=y))+geom_point()
hf <- lm(y~x, data=hubble)
hf
summary(hf)
library(tidyr)
gather(hubble, key=var, value=val, -Galaxy) %>% ggplot(aes(x=value, fill=var))+geom_hist()
ggplot(hubble(x=x))+geom_histogram()
ggplot(hubble,aes(x=x))+geom_histogram()
ggplot(hubble,aes(x=y))+geom_histogram()
x <- c(10,10,12,12,9,8,9,14,8)
y <- c(70,63,64,63,72,73,68,66,76)
f <- lm(y~x)
f
summary(f)
f <- lm(x~y)
summary(f)
f
40*.275
40*.425
40*.375
40*.45
40*.65
40*.4
40*.55
40*.425
40*.775
38/40*.4+.4*11/15+.2
33/40*.4+.4*10/15+.2
31/40*.4+.4*9/15+.2
25/40*.4+.4*6/15+.1
L <- scan()
L <- 9+10+10+9+7+10+9+9+8+30
F <- 9+6+8+7+7+3+7+9+3+9+30+7+8+2
T <- 7+6+8+8+10+7+5+1+7+2+8+9+17
l
L
F
T
38/40*.4+.4*(111/150)*(13/15)+.2
38/40*.4+.4*(13/15)+.2
31/40*.4+.4*(11/15)+.2
33/40*.4+.4*(12/15)+.2
33/40*.4+.4*(12/15+115/150)+.2
33/40*.4+.4*((12+115)/150)+.2
31/40*.4+.4*((11+95)/150)+.2
12/15
11/15
31/40
.73+.775+.2
.73+.775
38/40*.4+.4*((13+111)/150)+.2
31/40*.4+.4*((11+95)/150)+.2
32/40*.4+.4*((12+115)/150)+.2
31/40*.4+.4*((12+115)/150)+.2
install.packages("data.table")
library(data.table)
View(trainDat)
trDT <- data.table(trainDat)
trDT[duplicated(trDT)]
19+10+8+9+4+10+8+5
16+9+38
20+10+8+7+45
14+2+10+9+5+10+8+13
18+2+5+9+10+3+10+15+6
library(readr)
College2 <- read_csv("C:/Users/jpreszler/Desktop/College2.csv")
View(College2)
library(dplyr)
College2 <- mutate(College2, pctUndergrad = Undergrads/Students*100)
ggplot(College2, aes(x=CampHouse, y=Students))+geom_boxplot()
library(ggplot2)
ggplot(College2, aes(x=CampHouse, y=Students))+geom_boxplot()
ggplot(College2, aes(x=CampHouse, y=pctUndergrad))+geom_boxplot()
ggplot(College2, aes(x=Type, y=pctUndergrad))+geom_boxplot()
ggplot(College2, aes(x=Students))+geom_histogram()
summary(College2)
c2c <- filter(College2, !is.na(StudFac))
summary(c2c)
c2c <- filter(College2, !is.na(Undergrads))
summary(c2c)
c2c <- filter(College2, !is.na(StudFac))
c2c <- filter(c2c, !is.na(Undergrads))
summary(c2c)
c2c <- filter(c2c, Students>500, Students<25000)
summary(c2c)
ggplot(c2c, aes(x=StudFac))+geom_histogram()
c2c <- filter(c2c, StudFac<75)
summary(c2c)
ggplot(c2c, aes(x=StudFac))+geom_histogram()
ggplot(c2c, aes(x=StudFac))+geom_boxplot()
ggplot(c2c, aes(y=StudFac))+geom_boxplot()
ggplot(c2c, aes(y=StudFac, x=Type))+geom_boxplot()
ggplot(c2c, aes(y=pctUndergrad, x=Type))+geom_boxplot()
View(c2c)
filter(c2c, StudFac>40)
ggplot(c2c, aes(y=Students, x=Type))+geom_boxplot()
ggplot(c2c, aes(y=Undergrads, x=Type))+geom_boxplot()
c2cs<-filter(c2c, Undergrads < 10000)
ggplot(c2cs, aes(y=Undergrads, x=Type))+geom_boxplot()
summary(c2cs)
ggplot(c2c, aes(y=Students, x=Type))+geom_boxplot()
ggplot(c2c, aes(y=StudFac, x=Type))+geom_boxplot()
ggplot(c2cs, aes(y=StudFac, x=Type))+geom_boxplot()
ggplot(c2cs, aes(y=Students, x=Type))+geom_boxplot()
summary(filter(c2cs, StudFac>40))
c2cs<-filter(c2c, Undergrads < 10000, Undergrads>500)
ggplot(c2cs, aes(y=Students, x=Type))+geom_boxplot()
ggplot(c2cs, aes(y=StudFac, x=Type))+geom_boxplot()
summary(filter(c2cs, StudFac>40))
c2css<-filter(c2cs, StudFac<40)
summary(c2css)
ggplot(c2css, aes(y=StudFac, x=Type))+geom_boxplot()
ggplot(c2css, aes(y=Students, x=Type))+geom_boxplot()
ggplot(c2css, aes(y=Undergrads, x=Type))+geom_boxplot()
View(c2css)
samp <- sample(1:length(c2css), 1000)
samp <- sample(1:length(c2css), 1000, replace = FALSE)
?sample
samp <- sample(1:length(c2css$Name), 1000, replace = FALSE)
c2samp <- c2css[samp,]
hist(c2samp$Students)
hist(c2samp$StudFac)
hist(c2samp$Undergrads)
hist(c2samp$pctUndergrad)
ggplot(c2samp, aes(y=Undergrads, x=Type))+geom_boxplot()
ggplot(c2samp, aes(y=Students, x=Type))+geom_boxplot()
ggplot(c2samp, aes(y=StudFac, x=Type))+geom_boxplot()
ggplot(c2samp, aes(y=StudFac, x=CampHouse))+geom_boxplot()
c2samp$Name
write.csv(c2samp, "C://Users/jpreszler/Desktop/Colleges2-sample.csv", row.names=FALSE)
library(readr)
Colleges2_sample <- read_csv("C:/Users/jpreszler/Desktop/Colleges2-sample.csv")
View(Colleges2_sample)
attach(Colleges2_sample)
hist(StudFac)
hist(StudFac, title="Histogram of Student-Faculty Raio")
hist(StudFac, main ="Histogram of Student-Faculty Raio")
hist(StudFac, main ="Histogram of Student-Faculty Ratio")
hist(StudFac, main ="Histogram of Student-Faculty Ratio", xlab="Student-Faculty Ratio")
summary(StudFac)
sd(StudFac)
library(readr)
MLB2009 <- read_csv("C:/Users/jpreszler/Downloads/MLB2009.csv")
View(MLB2009)
attach(MLB2009)
mean(H[League == "AL"])
9*25
.83^4
.17^4
1-.17^4
60/390
60/500
mtcars
mtcars$mpg
df <- data.frame()
df$mpg <- seq(1,6, length.out = 20)
df2$mpg <- seq(1,6, length.out = 20)
123*5
.1894^5
1-.1894
.8106^5
1-pnorm(946,949,2)
1-pnorm(946,949,2/sqrt(3))
2/sqrt(3)
949+1.155
949-1.155
5500/sqrt(78)
62500+622.75
62500-622.75
1-pnorm(63000,62500,622.7524)
1-pnorm(65000,62500,622.7524)
2.98*10^-3
qnorm(1-.06, 62500,622.75)
1-pnorm(175,170,8)
8/sqrt(6)
170+3.265986
170-3.265986
1-pnorm(175,170,3.265986)
4.8/sqrt(350)
pnorm(11.75,12,4.8/sqrt(350))
pnorm(3.85,3.8,.12)-pnorm(3.75,3.8,.12)
.12/6
pnorm(3.85,3.8,.02)-pnorm(3.75,3.8,.02)
?xtabs
Chewy <- read.csv("C:/Users/jpreszler/Desktop/Chewy.csv")
View(Chewy)
xtabs(~Type+Time, data=Chewy)
margin.table(xtabs(~Type+Time, data=Chewy))
margin.table(xtabs(~Type+Time, data=Chewy), margin = 2)
margin.table(xtabs(~Type+Time, data=Chewy), margin = c(1,2))
margin.table(xtabs(~Type+Time, data=Chewy), margin = 1
)
?margin.table
?barplot
barplot(Chewy$Type)
summary(Chewy$Type)
barplot(summary(Chewy$Type))
barplot(summary(Chewy$Type), main="Bar Graph of Types")
barplot(summary(Chewy$Time), main="Bar Graph of Types")
library(readr)
ChewyR <- read_csv("C:/Users/jpreszler/Desktop/Chewy.csv")
View(ChewyR)
barplot(summary(ChewyR$Time), main="Bar Graph of Types")
summary(ChewyR$Type)
library(readr)
BULIMIA <- read_csv("C:/Users/jpreszler/Downloads/BULIMIA.CSV")
View(BULIMIA)
t.test(BULIMIA[BULIMIA$GROUP=="Bulimic",]$FNESCORE, conf=.95)
install.packages("RSQLite")
install.packages("XKCDdata")
library(readr)
Colleges2_sample <- read_csv("H:/M125 resources/DataSets/Colleges2-sample.csv")
View(Colleges2_sample)
t.test(Colleges2_sample$pctUndergrad~Colleges2_sample$Type)
t.test(Colleges2_sample$pctUndergrad~Colleges2_sample$Type, alternative="greater")
t.test(Colleges2_sample$pctUndergrad~Colleges2_sample$Type, alternative="less")
library(readr)
Breakfast_Study <- read_csv("H:/M125 resources/DataSets/Breakfast_Study.csv")
View(Breakfast_Study)
library(dplyr)
library(ggplot2)
xc <- c(0:4)
yc <- rep(0,4)
yc <- rep(0,5)
apartNum <- rep(92,5)
area <- rep(5,5)
bugtownDF <- data.frame(apartNum, area, xc, yc)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=4)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=10)
bugtownDF$xc <- c(0,.25,.5,.75,1)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=10)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=20)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=16)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=14)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=16)
bugtownDF$xc <- c(0,.125,.25,.375,.5)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=16)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=30)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=25)
ggplot(bugtownDF, aes(x=xc,y=yc))+geom_point(shape=0, size=27)
btdf <- read.csv("C:/Users/jpreszler/Desktop/m125-NEW/Random_Rectangles/data.org", sep="|", header=TRUE, strip.white = TRUE)
ggplot(btdf, aes(x=Xcoord*1/8, y=Ycoord*1/8))+geom_point(shape=0, size=27)
ggplot(btdf[btdf$Ycoord==0,], aes(x=Xcoord*1/8, y=Ycoord))+geom_point(shape=0, size=27)
ggplot(btdf[btdf$Ycoord==0,], aes(x=Xcoord, y=Ycoord))+geom_rect()
?geom_rect
ggplot(btdf[btdf$Ycoord==0,], aes(x=Xcoord, y=Ycoord))+geom_tile()
ggplot(btdf[btdf$Ycoord==0,], aes(x=Xcoord, y=Ycoord))+geom_tile(fill=FALSE)
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_rect()
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile()
ggplot(btdf, aes(x=Xcoord, y=Ycoord, fill=NA))+geom_tile()
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile(aes(fill=NA))
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile(aes(fill='NA'))
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile(aes(col='black', fill='white'))
ggplot(btdf, aes(x=Xcoord, y=Ycoord, col="black", fill="white"))+geom_tile()
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile(col="black")
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile(col="black", fill="white")
btdf <- read.csv("C:/Users/jpreszler/Desktop/m125-NEW/Random_Rectangles/data.org", sep="|", header=TRUE, strip.white = TRUE)
ggplot(btdf, aes(x=Xcoord, y=Ycoord))+geom_tile(col="black", fill="white")
?chisq.test
?matrix
m <- matrix(nrow = 3, ncol=2)
m[1,] <- c(12, 6)
m[2,] <- c(5, 11)
m
m[3,] <- c(4, 7)
m
chisq.test(m)
?join
library(dplyr)
?join
prop.test(56,100,conf.level = .95)
1135/1290
prop.test(51,78, p=.45)
prop.test(c(126,161),c(464,692))
prop.test(c(126,161),c(464,692), conf.level = .9)
s <- rnorm(25, mean=27,sd=7.3)
mean(s)
sd(s)
27-25.6
1.4/(7.8/5)
1.4/(7.8/sqrt(2500))
s <- rnorm(25, mean=27,sd=2.3)
mean(s)
sd(s)
(25.6-27)/(7.8/sqrt(25))
2*pt(-0.8974359. df=24)
(25.6-27)/(7.8/sqrt(25))
2*pt(-0.8974359, df=24)
(25.6-27)/(7.8/sqrt(2500))
2*pt(-8.974359, df=2499)
(25.6-27)/(7.8/sqrt(250))
2*pt(-2.838, df=249)
library(rvest)
install.packages(c("vrest", "stringr", "dplyr", "purrr"))
install.packages(c("rvest", "stringr", "dplyr", "purrr"))
library(rvest)
library(stringr)
library(dplyr)
library(purrr)
#url for courses in catalog
base_url <- "http://collegeofidaho.smartcatalogiq.com"
base_url_ext <- "/en/current/Undergraduate-Catalog/Courses"
base_html <- read_html(paste0(base_url,base_url_ext))
#extract links from base page
subjectLinks <- html_nodes(base_html, 'a')
#convert links to text
subjectText <- html_text(subjectLinks)
sub_url <- html_attr(subjectLinks, 'href')[78:120]
#pick out what corresponds to subject list
#we now have subject codes and names
subjectText <- subjectText[78:120]
subDF <- str_split(subjectText,pattern= '-', n=2, simplify=TRUE) %>% as.data.frame()
names(subDF) <- c("sub", "subject")
subDF <-mutate(subDF, sub=str_trim(sub, side="both"), subject=str_trim(subject, side="both"))
#get url for subject, for each row in subDF
#subDF <-subDF %>% mutate(url= paste0(base_url,base_url_ext,'/',sub,'-',str_replace_all(subject,' ','-')))
subDF$url <- sub_url
View(subDF)
#get url for subject, for each row in subDF
#subDF <-subDF %>% mutate(url= paste0(base_url,base_url_ext,'/',sub,'-',str_replace_all(subject,' ','-')))
subDF <- mutate(subDF, url=paste0(base_url,sub_url))
get_class_list <- function(i){
#get list of links on subject page
class_links <- html_nodes(read_html(subDF$url[i]), 'a')
#turn links to text
class_list <- html_text(class_links)
class_url <- html_attr(class_links, 'href')
classDF <- data.frame(list=class_list, url=class_url)
#only keep links for classes, each subject has
#classes starting in a different position
classDF <- classDF %>% filter(str_detect(list, paste0(subDF$sub[i],'-')))
#now build class dataframe with sub,number,name,url - we'll get the
#other details on the next scrape
#We'll split on 1st space, discard everything after it and use
#what's before it to build the required DF
classDF <- separate(classDF, list, into=c("id", "name"),sep=" ",extra="merge")
classDF <- separate(classDF, id, into=c("sub", "number"), sep="-")
#the id field has the last part of the new url, we need the
#subject url with the course level (100,200,etc) then id
classDF <- mutate(classDF, url=paste0(base_html,url))
print(i) #for testing to see when a suject fails
return(classDF)
}
temp <- map_dfr(1:length(subDF$sub),get_class_list)
library(tidyr)
temp <- map_dfr(1:length(subDF$sub),get_class_list)
View(temp)
get_class_list <- function(i){
#get list of links on subject page
class_links <- html_nodes(read_html(subDF$url[i]), 'a')
#turn links to text
class_list <- html_text(class_links)
class_url <- html_attr(class_links, 'href')
classDF <- data.frame(list=class_list, url=class_url)
#only keep links for classes, each subject has
#classes starting in a different position
classDF <- classDF %>% filter(str_detect(list, paste0(subDF$sub[i],'-')))
#now build class dataframe with sub,number,name,url - we'll get the
#other details on the next scrape
#We'll split on 1st space, discard everything after it and use
#what's before it to build the required DF
classDF <- separate(classDF, list, into=c("id", "name"),sep=" ",extra="merge")
classDF <- separate(classDF, id, into=c("sub", "number"), sep="-")
#the id field has the last part of the new url, we need the
#subject url with the course level (100,200,etc) then id
classDF <- mutate(classDF, url=paste0(base_url,url))
print(i) #for testing to see when a suject fails
return(classDF)
}
temp <- map_dfr(1:length(subDF$sub),get_class_list)
install.packages("kableExtra")
setwd("C:/Users/jpreszler/Desktop/peak-neo4j/peak-neo4j")
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
classes <- read.csv("data/class-list-2017-2018.csv", header=TRUE)
classes <- classes %>% dplyr::select(-url)
names(classes) <- c("Subject", "Number")
classes <- classes %>% mutate(Q1, Q2, Q3, Q4)
classes <- classes %>% mutate(Q1=" ", Q2=" ", Q3=" ", Q4=" ")
vector
?vector
classes <- classes %>% mutate(Q1 = vector(length=len),Q2 = vector(length=len),Q3 = vector(length=len),Q4 = vector(length=len))
View(classes)
classes <- read.csv("data/class-list-2017-2018.csv", header=TRUE)
classes <- classes %>% dplyr::select(-url)
names(classes) <- c("Subject", "Number", "Name")
len <- length(classes$Subject)
classes <- classes %>% mutate(Q1 = vector(length=len),Q2 = vector(length=len),Q3 = vector(length=len),Q4 = vector(length=len))
classes <- classes %>% mutate(Q1 = vector(mode="character",length=len),Q2 = vector(mode="character",length=len),Q3 = vector(mode = "character", length=len),Q4 = vector(mode = "character",length=len))
install.packages("printr")
?kable
filter(classes, Subject=="BUS", Number=="453")
?print
?knit_print
